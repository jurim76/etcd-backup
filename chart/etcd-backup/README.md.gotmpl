{{ template "chart.header" . }}

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}


## Getting Started

#### Create the "etcd-backup" secret

You could use [Vault secret](https://developer.hashicorp.com/vault/docs/platform/k8s/injector/annotations) or [externalsecret](https://external-secrets.io/v0.4.4/api-externalsecret) also.

VAULT_S3 variable contains path to Vault secret file (default path is `/vault/secrets/s3`)

```yaml
apiVersion: v1
kind: Secret
metadata:
  name: etcd-backup
type: Opaque
data:
  access_key: <AWS ACCESS_KEY_ID>
  secret_key: <AWS ACCESS_SECRET_KEY>
  bucket: <AWS S3 bucket>
```

#### Create optional `environment-name` configMap
```
apiVersion: v1
kind: ConfigMap
name: environment-name
data:
  env: my-cluster
```

#### Define [schedule](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs) in values.yaml

Default schedule is "@monthly"

```yaml
backup
  schedule: "@yearly"
```

#### Define webhook for slack notification
```yaml
env:
  - name: WEBHOOK_URL
    value: "https://hooks.slack.com/services/<channel-id>"
```

### Install the helm chart

```bash
helm install etcd-backup etcd-backup
```

### TBD Restore the backup

- Enable the pod
```yaml
pod:
  enabled: true
```

- Exec into the pod and run etcd-backup.sh
```bash
# List backups in S3 bucket
/etcd-backup.sh list

# Download the backup from S3 bucket
/etcd-backup.sh download <backup_name>

# Restore the backup (the snapshot restore part should be performed manually)
/etcd-backup.sh load <backup_name>
```

{{ template "chart.valuesSection" . }}
