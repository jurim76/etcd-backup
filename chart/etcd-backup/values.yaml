image:
  registry: jurim
  repository: etcd-backup
  pullPolicy: Always
  tag: ""

initContainer:
  name: busybox
  repository: busybox
  tag: 1.37
  # grant read permissions to etcd-backup group
  command: "['sh', '-c', 'chgrp 5001 /opt/backup/etcd/server.key && chmod 0640 /opt/backup/etcd/server.key']"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

podLabels:
  app.kubernetes.io/name: etcd-backup

podAnnotations: {}

podSecurityContext:
# fsGroup: 5001

serviceAccount:
  create: true
  name: etcd-backup

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 5001
  runAsGroup: 5001

resources:
  requests:
    cpu: 100m
    memory: 128Mi

volumes:
  - name: etcd-certs
    hostPath:
      path: /etc/kubernetes/pki/etcd
  - name: data
    emptyDir: {}

volumeMounts:
  - mountPath: /opt/backup/data
    name: data
  - mountPath: /opt/backup/etcd
    name: etcd-certs

# run on controlplane
nodeSelector:
  node-role.kubernetes.io/control-plane: ""

tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

affinity: {}

# required for etcd snapshot
hostNetwork: true

pod:
  # create pod
  enabled: true

backup:
  # backup schedule
  schedule: "@monthly"
  # backup command arguments
  args:
    - /etcd-backup.sh
    - backup

env:
  - name: cacert_file
    value: "/opt/backup/etcd/ca.crt"
  - name: cert_file
    value: "/opt/backup/etcd/server.crt"
  - name: key_file
    value: "/opt/backup/etcd/server.key"
  - name: etcd_endpoints
    value: "https://127.0.0.1:2379"
  - name: ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: etcd-backup
        key: access_key
  - name: ACCESS_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: etcd-backup
        key: secret_key
  - name: S3_ENDPOINT
    valueFrom:
      secretKeyRef:
        name: etcd-backup
        key: endpoint
        optional: true
  - name: S3_BUCKET
    valueFrom:
      secretKeyRef:
        name: etcd-backup
        key: bucket
        optional: true
  - name: ENV_NAME
    valueFrom:
      configMapKeyRef:
        name: environment-name
        key: env
        optional: true
